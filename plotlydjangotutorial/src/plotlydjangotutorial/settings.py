"""
Django settings for plotlydjangotutorial project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/
     home,

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
print("Voici le contenu de la variable BASE_DIR , c est un chemin la preuve : " + str(BASE_DIR))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-np&ran4sm^kkl+6hw%bh-c%g^5t$%d*%mvoj%x-k&22w$gb*91'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_plotly_dash.apps.DjangoPlotlyDashConfig',
    'home',
    'channels',
    'channels_redis',
    'crispy_forms',
 
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'plotlydjangotutorial.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
         # APP_DIRS Recherche automatique des templates dans TOUTES les applications
         # notamment dans les dossiers 'templates' de chaque application
         # par exemple, si dans l'envirronement virtuel je trouve un dossier 'templates'
         # \.env\Lib\site-packages\django_plotly_dash\templates\django_plotly_dash>
         'APP_DIRS': True,
         
        #'DIRS': ['plotlydjangotutorial\src\home\templates\home'],
        # ci dessous le chemin n'est pas bien formé je pense ...
        #'DIRS': ['plotlydjangotutorial\src\templates'],
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

print("le chemin qui mène au template :" ,TEMPLATES[0]['DIRS'])

WSGI_APPLICATION = 'plotlydjangotutorial.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        # ci dessous je tape le nom de ma base de données que j'ai créé
        'NAME': 'udemy',
        'USER': 'postgres',
        # ci dessous je tape le mot de passe de ma base de données
        'PASSWORD': '123456',
        'HOST': 'localhost',
        'PORT': '5432',
     
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
CRISPY_TEMPLATE_PACK = 'bootstrap4'

# ci dessous je dois creer un fichier nommé routing.py dans le dossier plotlydjangotutorial
# et y mettre le code suivant :
# from channels.routing import ProtocolTypeRouter, URLRouter
ASGI_APPLICATION = 'plotlydjangotutorial.routing.application'
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379),],
        },
    },  
}

#ici
STATIC_FILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'django_plotly_dash.finders.DashAssetFinder',
    'django_plotly_dash.finders.DashComponentFinder',
    
]

#ici
PLOTLY_COMPONENTS = [
    'dash_core_components',
    'dash_html_components',
    'dash_renderer',
    'dash_table',
    'dpd_components',
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATICFILES_LOCATION = 'static'
STATIC_URL = 'static/'  
STATIC_ROOT = 'static'
#STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'plotlydjangotutorial\static')
]

print("voici le chemin vers le dossier static : " + str(STATICFILES_DIRS))

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

X_FRAME_OPTIONS = 'SAMEORIGIN'

